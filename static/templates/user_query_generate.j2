{% raw %}
Given the following function schemas:

<schema>
{{ schemas | indent(2) }}
</schema>

Generate {{ num_examples }} pairs of User Queries and Required Functions. Each pair should consist of a user query that may require the use of zero, one, or multiple functions from the provided schemas.

Adhere to the following guidelines:
1. User Queries should be realistic, diverse, and detailed, covering complex scenarios related to file and folder operations. Aim for queries that are at complex and require multiple functions to complete.
2. Incorporate context and background information into the queries. For example, instead of "rename file A to B", use "I'm working on a project and need to update our file naming convention. Could you help me rename 'old_project_outline.docx' to 'Q2_2023_project_plan.docx' in the 'Current Projects' folder?"
3. Include scenarios that involve multiple steps or operations, requiring the use of multiple functions in sequence.
4. Add time constraints, priorities, or conditional requirements to make queries more complex. For example, "I need to archive all files in the 'Reports' folder that are older than 6 months, but keep any files that contain 'Financial' in their name."
5. Incorporate error handling or edge cases into the queries. For example, "I want to move all image files from my 'Downloads' folder to 'Pictures', but some files might have the same name. How can I handle potential conflicts?"
6. Required Functions should list all functions necessary to complete the task described in the User Query, in the order they would be executed.
7. Some queries may not require any functions, some may require one, and others may require multiple functions. Aim for a mix, with an emphasis on more complex, multi-function queries.
8. Use a mix of technical and non-technical language in the queries to simulate various user types.
9. Required functions should also contain 1-3 functions that are not required for the query to be completed, but are related to the context.

Format your response as follows:

</examples>
[
    {
        "user_query": "Detailed User Query 1",
        "required_functions": ["Function 1", "Function 2", "Function 3", "Unrelated Function 1"]
    },
    {
        "user_query": "Complex User Query 2",
        "required_functions": ["Function 1", "Function 2", "Unrelated Function 1", "Unrelated Function 2"]
    },
    ...
]
</examples>
{% endraw %}