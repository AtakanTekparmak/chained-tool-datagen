[
    {
        "name": "get_tweets_by_hashtag",
        "description": "Retrieves tweets containing a given hashtag",
        "parameters": [
            {
                "name": "hashtag",
                "type": "string"
            },
            {
                "name": "count",
                "type": "int"
            }
        ],
        "required": [ "hashtag" ],
        "returns": [
            {
                "name": "tweets",
                "type": "list[string]"
            }
        ]
    },
    {
        "name": "get_value_from_dict",
        "description": "Retrieves the value from a dictionary for a given key",
        "parameters": [
            {
                "name": "dictionary",
                "type": "dict[string, any]"
            },
            {
                "name": "key",
                "type": "string"
            }
        ],
        "required": [ "dictionary", "key" ],
        "returns": [
            {
                "name": "value",
                "type": "any"
            }
        ]
    },
    {
        "name": "concatanate_strings",
        "description": "Concatanates a list of strings into a single string",
        "parameters": [
            {
                "name": "list_of_strings",
                "type": "list[string]"
            }
        ],
        "required": [ "list_of_strings" ],
        "returns": [
            {
                "name": "concatanated_string",
                "type": "string"
            }
        ]
    },
    {
        "name": "get_sentiment_analysis",
        "description": "Performs sentiment analysis on a given list of strings, by calling a sentiment analysis model. Returns Positiveness Scale from -10 to +10 (1 increments)",
        "parameters": [
            {
                "name": "text",
                "type": "list[string]"
            }
        ],
        "required": [ "text" ],
        "returns": [
            {
                "name": "sentiment",
                "type": "int"
            }
        ]
    },
    {    
        "name": "get_mean",
        "description": "Calculates the mean of a list of integers",
        "parameters": [
            {
                "name": "nummbers",
                "type": "list[int]"
            }
        ],
        "required": [ "numbers" ],
        "returns": [
            {
                "name": "mean",
                "type": "float"
            }
        ]
    },
    {
        "name": "send_email",
        "description": "Sends an email with the given subject, body, and recipient",
        "parameters": [
            {
                "name": "subject",
                "type": "string"
            },
            {
                "name": "body",
                "type": "string"
            },
            {
                "name": "recipient",
                "type": "string"
            }
        ],
        "required": [ "subject", "body", "recipient" ],
        "returns": []
    },
    {
        "name": "output_to_current_chat",
        "description": "Outputs a message to the current chat or conversation",
        "parameters": [
            {
                "name": "message",
                "type": "string"
            }
        ],
        "required": [ "message" ],
        "returns": []
    },
    {
        "name": "turn_into_string",
        "description": "Returns the string representation of a value of any data type",
        "parameters": [
            {
                "name": "value",
                "type": "any"
            }
        ],
        "required": [ "value" ],
        "returns": [
            {
                "name": "value_string",
                "type": "string"
            }
        ]
    },
    {
        "name": "get_fighter_stats",
        "description": "Retrieves the stats of a UFC fighter",
        "parameters": [
            {
                "name": "fighter_name",
                "type": "string"
            }
        ],
        "required": [ "fighter_name" ],
        "returns": [
            {
                "name": "stats",
                "type": "dict[string, any]"
            }
        ]
    },
    {
        "name": "construct_dict",
        "description": "Constructs a dictionary from a list of keys and a list of values",
        "parameters": [
            {
                "name": "keys",
                "type": "list[string]"
            },
            {
                "name": "values",
                "type": "list[any]"
            }
        ],
        "required": [ "keys", "values" ],
        "returns": [
            {
                "name": "dictionary",
                "type": "dict[string, any]"
            }
        ]
    },
    {
        "name": "get_crypto_by_market_cap",
        "description": "Retrieves the top N cryptocurrencies by market cap",
        "parameters": [
            {
                "name": "count",
                "type": "int"
            }
        ],
        "required": [ "count" ],
        "returns": [
            {
                "name": "cryptocurrencies",
                "type": "list[dict[string, any]]"
            }
        ]
    },
    {
        "name": "get_crypto_price",
        "description": "Retrieves the current price of a cryptocurrency in terms of USDT",
        "parameters": [
            {
                "name": "cryptocurrency",
                "type": "string"
            }
        ],
        "required": [ "cryptocurrency" ],
        "returns": [
            {
                "name": "price",
                "type": "float"
            }
        ]
    },
    {
        "name": "get_weather",
        "description": "Retrieves the current weather of a location",
        "parameters": [
            {
                "name": "location",
                "type": "string"
            }
        ],
        "required": [ "location" ],
        "returns": [
            {
                "name": "weather",
                "type": "dict[string, any]"
            }
        ]
    },
    {
        "name": "get_news_by_topic",
        "description": "Retrieves the latest news articles on a given topic",
        "parameters": [
            {
                "name": "topic",
                "type": "string"
            }
        ],
        "required": [ "topic" ],
        "returns": [
            {
                "name": "news",
                "type": "list[dict[string, any]]"
            }
        ]
    },
    {
        "name": "get_stock_price",
        "description": "Retrieves the current price of a stock in terms of USD",
        "parameters": [
            {
                "name": "stock",
                "type": "string"
            }
        ],
        "required": [ "stock" ],
        "returns": [
            {
                "name": "price",
                "type": "float"
            }
        ]
    },
    {
        "name": "web_search",
        "description": "Performs a web search on a given query",
        "parameters": [
            {
                "name": "query",
                "type": "string"
            },
            {
                "name": "count",
                "type": "int"
            }
        ],
        "required": [ "query" ],
        "returns": [
            {
                "name": "results",
                "type": "list[dict[string, any]]"
            }
        ]
    },
    {
        "name": "generate_image",
        "description": "Generates an image based on a given text, using a text-to-image model",
        "parameters": [
            {
                "name": "text",
                "type": "string"
            }
        ],
        "required": [ "text" ],
        "returns": [
            {
                "name": "image_url",
                "type": "string"
            }
        ]
    },
    {
        "name": "perform_ocr",
        "description": "Performs Optical Character Recognition (OCR) on an image to extract text",
        "parameters": [
            {
                "name": "image_url",
                "type": "string"
            }
        ],
        "required": [ "image_url" ],
        "returns": [
            {
                "name": "text",
                "type": "string"
            }
        ]
    },
    {
        "name": "generate_markdown",
        "description": "Generates a markdown document based on a given title and content",
        "parameters": [
            {
                "name": "title",
                "type": "string"
            },
            {
                "name": "content",
                "type": "string"
            }
        ],
        "required": [ "title", "content" ],
        "returns": [
            {
                "name": "markdown",
                "type": "string"
            }
        ]
    },
    {
        "name": "generate_pdf",
        "description": "Generates a PDF document based on a given markdown content",
        "parameters": [
            {
                "name": "markdown",
                "type": "string"
            }
        ],
        "required": [ "markdown" ],
        "returns": [
            {
                "name": "pdf_url",
                "type": "string"
            }
        ]
    },
    {
        "name": "create_file",
        "description": "Creates a new file in the file system",
        "parameters": [
            {
                "name": "filename",
                "type": "string"
            },
            {
                "name": "content",
                "type": "string"
            },
            {
                "name": "filepath",
                "type": "string"
            }
        ],
        "required": [ "filename", "filepath" ],
        "returns": [
            {
                "name": "file_path",
                "type": "string"
            }
        ]
    },
    {
        "name": "read_file",
        "description": "Reads the contents of an existing file",
        "parameters": [
            {
                "name": "file_path",
                "type": "string"
            }
        ],
        "required": [ "file_path" ],
        "returns": [
            {
                "name": "file_content",
                "type": "string"
            }
        ]
    },
    {
        "name": "delete_file",
        "description": "Deletes an existing file",
        "parameters": [
            {
                "name": "file_path",
                "type": "string"
            }
        ],
        "required": [ "file_path" ],
        "returns": [
            {
                "name": "success",
                "type": "boolean"
            }
        ]
    },
    {
        "name": "copy_file",
        "description": "Copies an existing file to a new location",
        "parameters": [
            {
                "name": "source_file_path",
                "type": "string"
            },
            {
                "name": "destination_path",
                "type": "string"
            }
        ],
        "required": [ "source_file_path", "destination_path" ],
        "returns": [
            {
                "name": "success",
                "type": "boolean"
            }
        ]
    },
    {
        "name": "move_file",
        "description": "Moves an existing file to a new location",
        "parameters": [
            {
                "name": "source_file_path",
                "type": "string"
            },
            {
                "name": "new_path",
                "type": "string"
            }
        ],
        "required": [ "source_file_path", "new_path" ],
        "returns": [
            {
                "name": "success",
                "type": "boolean"
            }
        ]
    },
    {
        "name": "rename_file",
        "description": "Renames an existing file",
        "parameters": [
            {
                "name": "file_path",
                "type": "string"
            },
            {
                "name": "new_name",
                "type": "string"
            }
        ],
        "required": [ "file_path", "new_name" ],
        "returns": [
            {
                "name": "success",
                "type": "boolean"
            }
        ]
    },
    {
        "name": "create_folder",
        "description": "Creates a new folder in the file system",
        "parameters": [
            {
                "name": "folder_name",
                "type": "string"
            },
            {
                "name": "parent_folder_path",
                "type": "string"
            }
        ],
        "required": [ "folder_name", "parent_folder_path" ],
        "returns": [
            {
                "name": "folder_path",
                "type": "string"
            }
        ]
    },
    {
        "name": "read_pdf",
        "description": "Reads the contents of a PDF file",
        "parameters": [
            {
                "name": "pdf_file_path",
                "type": "string"
            }
        ],
        "required": [ "pdf_file_path" ],
        "returns": [
            {
                "name": "pdf_content",
                "type": "string"
            }
        ]
    },
    {
        "name": "read_word_file",
        "description": "Reads the contents of a Word file",
        "parameters": [
            {
                "name": "word_file_path",
                "type": "string"
            }
        ],
        "required": [ "word_file_path" ],
        "returns": [
            {
                "name": "word_content",
                "type": "string"
            }
        ]
    },
    {
        "name": "create_note",
        "description": "Creates a new note",
        "parameters": [
            {
                "name": "note_content",
                "type": "string"
            }
        ],
        "required": [ "noteContent" ],
        "returns": [
            {
                "name": "note_name",
                "type": "string"
            }
        ]
    },
    {
        "name": "edit_note",
        "description": "Edits the contents of an existing note",
        "parameters": [
            {
                "name": "note_name",
                "type": "string"
            },
            {
                "name": "new_content",
                "type": "string"
            }
        ],
        "required": [ "note_name", "new_content" ],
        "returns": [
            {
                "name": "success",
                "type": "boolean"
            }
        ]
    },
    {
        "name": "read_note",
        "description": "Reads the contents of an existing note",
        "parameters": [
            {
                "name": "note_name",
                "type": "string"
            }
        ],
        "required": [ "note_name" ],
        "returns": [
            {
                "name": "note_content",
                "type": "string"
            }
        ]
    },
    {
        "name": "delete_note",
        "description": "Deletes an existing note",
        "parameters": [
            {
                "name": "note_name",
                "type": "string"
            }
        ],
        "required": [ "note_name" ],
        "returns": [
            {
                "name": "success",
                "type": "boolean"
            }
        ]
    }
] 